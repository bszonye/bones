[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "bones"
version = "0.0.0"
description = "dice analysis toolkit"
authors = ["Bradd Szonye <bszonye@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/bszonye/bones"
repository = "https://github.com/bszonye/bones"
keywords = ["dice", "probability"]
packages = [
    { include = "bones" },
]

[tool.poetry.scripts]
bones = "bones.__main__:main"

[tool.poetry.dependencies]
# python  required for
# ^3.11   tomllib, typing.Self
# ^3.10   AttributeError.name & .obj, keyword.issoftkeyword
# ^3.8.1  flake8 = ^6.0.0
# ^3.8    positional-only parameters
python = "^3.11"
lea = "^3.4.2"

[tool.poetry.group.plot.dependencies]  # optional plotting support
matplotlib = "^3.6.2"
PyGObject = "^3.42.2"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
coverage = "^6.5.0"
flake8 = "^6.0.0"
flake8-black = "^0.3.5"
flake8-bugbear = "^22.12.6"
flake8-docstrings = "^1.6.0"
flake8-isort = "^5.0.3"
flake8-pyi = "^22.11.0"
isort = "^5.10.1"
# mypy = "^0.991"
mypy = {git = "git@github.com:python/mypy.git"}  # supports Self
pre-commit = "^2.20.0"
pydocstyle = "^6.1.1"
pyright = "^1.1.283"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"

[tool.black]
line-length = 86

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    '\.\.\.',
    'if __name__ == .__main__.:',
    'raise NotImplementedError',
]

[tool.coverage.run]
branch = true

[tool.isort]
profile = "black"
line_length = 86
combine_as_imports = true
order_by_type = false
skip_gitignore = true
extra_standard_library = ['tomllib']  # issue #2007

[tool.mypy]
mypy_path = "stubs"
files = "."
strict = true
warn_no_return = true
warn_unreachable = true

[tool.pydocstyle]
match = '.*[.]py'

[tool.pyright]
typeCheckingMode = "strict"
include = ["bones", "tests"]
exclude = ["**/node_modules", "**/__pycache__", "**/.*"]
stubPath = "stubs"
pythonVersion = "3.11"
pythonPlatform = "All"

[tool.pytest.ini_options]
addopts = "--cov=bones --cov-report=term-missing:skip-covered --cov-report=html"
filterwarnings = [
    # "error",
    # "ignore::UserWarning",
    'ignore:DynamicImporter:ImportWarning',
    'ignore:Gtk\.Window\.set_wmclass:DeprecationWarning',
]
